#include "Matrix2D.h"
#include <Arduino.h>

bool display_write = 0;

char cisla[] = {
    0x3C, 0x66, 0x6E, 0x76, 0x66, 0x66, 0x3C, 0x00,         //0
    0x18, 0x18, 0x38, 0x18, 0x18, 0x18, 0x7E, 0x00,         //1
    0x3C, 0x66, 0x06, 0x0C, 0x30, 0x60, 0x7E, 0x00,         //2
    0x3C, 0x66, 0x06, 0x1C, 0x06, 0x66, 0x3C, 0x00,         //3
    0x06, 0x0E, 0x1E, 0x66, 0x7F, 0x06, 0x06, 0x00,         //4
    0x7E, 0x60, 0x7C, 0x06, 0x06, 0x66, 0x3C, 0x00,         //5
    0x3C, 0x66, 0x60, 0x7C, 0x66, 0x66, 0x3C, 0x00,         //6
    0x7E, 0x66, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x00,         //7
    0x3C, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00,         //8
    0x3C, 0x66, 0x66, 0x3E, 0x06, 0x66, 0x3C, 0x00,			    //9
  	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,			    //debug
	};

char Mala_pismena[] = {
 
    0x00, 0x00, 0x3C, 0x06, 0x3E, 0x66, 0x3E, 0x00,       //a
    0x60, 0x60, 0x7C, 0x66, 0x66, 0x66, 0x7C, 0x00, 
    0x00, 0x00, 0x3C, 0x66, 0x60, 0x66, 0x3C, 0x00, 
    0x06, 0x06, 0x3E, 0x66, 0x66, 0x66, 0x3E, 0x00, 
    0x00, 0x00, 0x3C, 0x66, 0x7E, 0x60, 0x3E, 0x00, 
    0x1C, 0x36, 0x30, 0x78, 0x30, 0x30, 0x30, 0x00, 
    0x00, 0x00, 0x3E, 0x66, 0x66, 0x3E, 0x06, 0x7C, 
    0x60, 0x60, 0x7C, 0x66, 0x66, 0x66, 0x66, 0x00, 
    0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 
    0x06, 0x00, 0x06, 0x06, 0x06, 0x06, 0x66, 0x3C, 
    0x60, 0x60, 0x66, 0x6C, 0x78, 0x7C, 0x66, 0x00, 
    0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 
    0x00, 0x00, 0x63, 0x77, 0x7F, 0x6B, 0x63, 0x00, 
    0x00, 0x00, 0x7C, 0x66, 0x66, 0x66, 0x66, 0x00, 
    0x00, 0x00, 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x00, 
    0x00, 0x00, 0x7C, 0x66, 0x66, 0x7C, 0x60, 0x60, 
    0x00, 0x00, 0x3E, 0x66, 0x66, 0x3E, 0x06, 0x06, 
    0x00, 0x00, 0x7C, 0x66, 0x60, 0x60, 0x60, 0x00, 
    0x00, 0x00, 0x3C, 0x60, 0x3C, 0x06, 0x7C, 0x00, 
    0x30, 0x30, 0xFC, 0x30, 0x30, 0x36, 0x1C, 0x00, 
    0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00, 
    0x00, 0x00, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00, 
    0x00, 0x00, 0x63, 0x6B, 0x7F, 0x36, 0x22, 0x00, 
    0x00, 0x00, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x00, 
    0x00, 0x00, 0x66, 0x66, 0x66, 0x3E, 0x06, 0x7C, 
    0x00, 0x00, 0x7E, 0x0C, 0x18, 0x30, 0x7E, 0x00
  };

    char Velka_pismena[] = {

    0x18, 0x3C, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00,     //A
    0x7C, 0x66, 0x66, 0x7C, 0x66, 0x66, 0x7C, 0x00, 
    0x3C, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3C, 0x00, 
    0x78, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0x78, 0x00, 
    0x7E, 0x60, 0x60, 0x78, 0x60, 0x60, 0x7E, 0x00, 
    0x7E, 0x60, 0x60, 0x78, 0x60, 0x60, 0x60, 0x00, 
    0x3C, 0x66, 0x60, 0x6E, 0x66, 0x66, 0x3C, 0x00, 
    0x66, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00, 
    0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 
    0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x6C, 0x38, 0x00, 
    0x66, 0x6C, 0x78, 0x70, 0x78, 0x6C, 0x66, 0x00, 
    0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7E, 0x00, 
    0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63, 0x00, 
    0x66, 0x76, 0x7E, 0x7E, 0x6E, 0x66, 0x66, 0x00, 
    0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00, 
    0x7C, 0x66, 0x66, 0x7C, 0x60, 0x60, 0x60, 0x00, 
    0x3C, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x0E, 0x00, 
    0x7C, 0x66, 0x66, 0x7C, 0x78, 0x6C, 0x66, 0x00, 
    0x3C, 0x66, 0x60, 0x3C, 0x06, 0x66, 0x3C, 0x00, 
    0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 
    0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00, 
    0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00, 
    0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00, 
    0x66, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x66, 0x00, 
    0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x00, 
    0x7E, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x7E, 0x00
  };

Matrix2D::Matrix2D(){};

void Matrix2D::begin(int DATA_PIN, int CLK_PIN, int LAT_PIN)
{
  Matrix2D::DATAPIN = DATA_PIN;
  Matrix2D::CLKPIN = CLK_PIN;
  Matrix2D::LATPIN = LAT_PIN;

  pinMode(DATAPIN, OUTPUT);
  pinMode(CLKPIN, OUTPUT);
  pinMode(LATPIN, OUTPUT);

  Serial.println("Setup complete");
}

void Matrix2D::display(){
  char number = 4;
  if (display_write == 0)
    {
      for(int i = 7; i >= 0; i--)
  	  {
        shiftOut(DATAPIN,CLKPIN,LSBFIRST, cisla[i + number*8]);
        Serial.println(cisla[(7-i)+ number*8], BIN);
      }
      digitalWrite(LATPIN, HIGH);
      display_write = 1;
    }
}